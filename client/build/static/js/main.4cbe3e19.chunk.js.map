{"version":3,"sources":["serviceWorker.ts","config.ts","auth/Auth.js","components/Callback.tsx","components/EditPhoto.tsx","api/photos-api.ts","components/LogIn.tsx","components/NotFound.tsx","components/Photos.tsx","App.tsx","routing.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","apiEndpoint","authConfig","Auth","history","auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","this","login","bind","logout","handleAuthentication","isAuthenticated","getAccessToken","getIdToken","renewSession","authorize","parseHash","err","authResult","accessToken","idToken","console","log","setSession","replace","alert","error","localStorage","setItem","expiresAt","expiresIn","Date","getTime","checkSession","error_description","removeItem","return_to","origin","Callback","UploadState","Dimmer","active","Loader","content","getPhotos","Axios","get","headers","response","data","items","createPhoto","newPhoto","post","JSON","stringify","item","patchPhoto","photoId","updatedPhoto","patch","deletePhoto","delete","getUploadUrl","uploadUrl","uploadFile","file","put","EditPhoto","state","undefined","uploadState","NoUpload","handleFileChange","event","files","target","setState","handleSubmit","preventDefault","setUploadState","FetchingPresignedUrl","props","auth","params","UploadingFile","message","Form","onSubmit","Field","type","accept","placeholder","onChange","renderButton","Button","loading","React","LogIn","onLogin","onClick","size","color","NotFound","Photos","photos","newPhotoName","loadingPhotos","handleNameChange","value","onEditButtonClick","push","onPhotoCreate","dueDate","calculateDueDate","name","onPhotoDelete","filter","photo","onPhotoCheck","pos","done","update","$set","Header","as","renderCreatePhotoInput","renderPhotos","Grid","Row","Column","width","Input","action","labelPosition","icon","fluid","actionPosition","Divider","renderLoading","renderPhotosList","indeterminate","inline","padded","map","verticalAlign","Checkbox","checked","floated","Icon","attachmentUrl","Image","src","wrapped","date","setDate","getDate","dateFormat","App","handleLogin","handleLogout","Segment","style","padding","vertical","container","stackable","textAlign","generateMenu","generateCurrentPage","Menu","Item","to","position","logInLogOutButton","path","exact","render","component","Component","createHistory","ReactDOM","test","hash","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cbe3e19.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// TODO: Once your application is deployed, copy an API id here so that the frontend could interact with it\r\nconst apiId = '2l9lb6v2o5'\r\nexport const apiEndpoint = `https://${apiId}.execute-api.us-east-1.amazonaws.com/dev`\r\n\r\nexport const authConfig = {\r\n  // TODO: Create an Auth0 application and copy values from it into this map. For example:\r\n  // domain: 'dev-nd9990-p4.us.auth0.com',\r\n  domain: 'dev-7h2rt62q.us.auth0.com',            // Auth0 domain\r\n  clientId: 'We2FG0nuSnJ4mc3mIiOkaM10h1FB0xjb',          // Auth0 client id\r\n  callbackUrl: 'http://localhost:3000/callback'\r\n}\r\n","import auth0 from 'auth0-js';\r\nimport { authConfig } from '../config';\r\n\r\nexport default class Auth {\r\n  accessToken;\r\n  idToken;\r\n  expiresAt;\r\n\r\n  auth0 = new auth0.WebAuth({\r\n    domain: authConfig.domain,\r\n    clientID: authConfig.clientId,\r\n    redirectUri: authConfig.callbackUrl,\r\n    responseType: 'token id_token',\r\n    scope: 'openid'\r\n  });\r\n\r\n  constructor(history) {\r\n    this.history = history\r\n\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.handleAuthentication = this.handleAuthentication.bind(this);\r\n    this.isAuthenticated = this.isAuthenticated.bind(this);\r\n    this.getAccessToken = this.getAccessToken.bind(this);\r\n    this.getIdToken = this.getIdToken.bind(this);\r\n    this.renewSession = this.renewSession.bind(this);\r\n  }\r\n\r\n  login() {\r\n    this.auth0.authorize();\r\n  }\r\n\r\n  handleAuthentication() {\r\n    this.auth0.parseHash((err, authResult) => {\r\n      if (authResult && authResult.accessToken && authResult.idToken) {\r\n        console.log('Access token: ', authResult.accessToken)\r\n        console.log('id token: ', authResult.idToken)\r\n        this.setSession(authResult);\r\n      } else if (err) {\r\n        this.history.replace('/');\r\n        console.log(err);\r\n        alert(`Error: ${err.error}. Check the console for further details.`);\r\n      }\r\n    });\r\n  }\r\n\r\n  getAccessToken() {\r\n    return this.accessToken;\r\n  }\r\n\r\n  getIdToken() {\r\n    return this.idToken;\r\n  }\r\n\r\n  setSession(authResult) {\r\n    // Set isLoggedIn flag in localStorage\r\n    localStorage.setItem('isLoggedIn', 'true');\r\n\r\n    // Set the time that the access token will expire at\r\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\r\n    this.accessToken = authResult.accessToken;\r\n    this.idToken = authResult.idToken;\r\n    this.expiresAt = expiresAt;\r\n\r\n    // navigate to the home route\r\n    this.history.replace('/');\r\n  }\r\n\r\n  renewSession() {\r\n    this.auth0.checkSession({}, (err, authResult) => {\r\n       if (authResult && authResult.accessToken && authResult.idToken) {\r\n         this.setSession(authResult);\r\n       } else if (err) {\r\n         this.logout();\r\n         console.log(err);\r\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\r\n       }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    // Remove tokens and expiry time\r\n    this.accessToken = null;\r\n    this.idToken = null;\r\n    this.expiresAt = 0;\r\n\r\n    // Remove isLoggedIn flag from localStorage\r\n    localStorage.removeItem('isLoggedIn');\r\n\r\n    this.auth0.logout({\r\n      return_to: window.location.origin\r\n    });\r\n\r\n    // navigate to the home route\r\n    this.history.replace('/');\r\n  }\r\n\r\n  isAuthenticated() {\r\n    // Check whether the current time is past the\r\n    // access token's expiry time\r\n    let expiresAt = this.expiresAt;\r\n    return new Date().getTime() < expiresAt;\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Dimmer, Loader } from 'semantic-ui-react'\r\n\r\nfunction Callback() {\r\n  return (\r\n    <Dimmer active>\r\n      <Loader content=\"Loading\" />\r\n    </Dimmer>\r\n  )\r\n}\r\n\r\nexport default Callback\r\n","import * as React from 'react'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport Auth from '../auth/Auth'\r\nimport { getUploadUrl, uploadFile } from '../api/photos-api'\r\n\r\nenum UploadState {\r\n  NoUpload,\r\n  FetchingPresignedUrl,\r\n  UploadingFile,\r\n}\r\n\r\ninterface EditPhotoProps {\r\n  match: {\r\n    params: {\r\n      photoId: string\r\n    }\r\n  }\r\n  auth: Auth\r\n}\r\n\r\ninterface EditPhotoState {\r\n  file: any\r\n  uploadState: UploadState\r\n}\r\n\r\nexport class EditPhoto extends React.PureComponent<\r\n  EditPhotoProps,\r\n  EditPhotoState\r\n> {\r\n  state: EditPhotoState = {\r\n    file: undefined,\r\n    uploadState: UploadState.NoUpload\r\n  }\r\n\r\n  handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = event.target.files\r\n    if (!files) return\r\n\r\n    this.setState({\r\n      file: files[0]\r\n    })\r\n  }\r\n\r\n  handleSubmit = async (event: React.SyntheticEvent) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      if (!this.state.file) {\r\n        alert('File should be selected')\r\n        return\r\n      }\r\n\r\n      this.setUploadState(UploadState.FetchingPresignedUrl)\r\n      const uploadUrl = await getUploadUrl(this.props.auth.getIdToken(), this.props.match.params.photoId)\r\n\r\n      this.setUploadState(UploadState.UploadingFile)\r\n      await uploadFile(uploadUrl, this.state.file)\r\n\r\n      alert('File was uploaded!')\r\n    } catch (e) {\r\n      alert('Could not upload a file: ' + (e as Error).message)\r\n    } finally {\r\n      this.setUploadState(UploadState.NoUpload)\r\n    }\r\n  }\r\n\r\n  setUploadState(uploadState: UploadState) {\r\n    this.setState({\r\n      uploadState\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Upload new image</h1>\r\n\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Field>\r\n            <label>File</label>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              placeholder=\"Image to upload\"\r\n              onChange={this.handleFileChange}\r\n            />\r\n          </Form.Field>\r\n\r\n          {this.renderButton()}\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderButton() {\r\n\r\n    return (\r\n      <div>\r\n        {this.state.uploadState === UploadState.FetchingPresignedUrl && <p>Uploading image metadata</p>}\r\n        {this.state.uploadState === UploadState.UploadingFile && <p>Uploading file</p>}\r\n        <Button\r\n          loading={this.state.uploadState !== UploadState.NoUpload}\r\n          type=\"submit\"\r\n        >\r\n          Upload\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { apiEndpoint } from '../config'\r\nimport { Photo } from '../types/Photo';\r\nimport { CreatePhotoRequest } from '../types/CreatePhotoRequest';\r\nimport Axios from 'axios'\r\nimport { UpdatePhotoRequest } from '../types/UpdatePhotoRequest';\r\n\r\nexport async function getPhotos(idToken: string): Promise<Photo[]> {\r\n  console.log('Fetching photos')\r\n\r\n  const response = await Axios.get(`${apiEndpoint}/photos`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${idToken}`\r\n    },\r\n  })\r\n  console.log('Photos:', response.data)\r\n  return response.data.items\r\n}\r\n\r\nexport async function createPhoto(\r\n  idToken: string,\r\n  newPhoto: CreatePhotoRequest\r\n): Promise<Photo> {\r\n  const response = await Axios.post(`${apiEndpoint}/photos`,  JSON.stringify(newPhoto), {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${idToken}`\r\n    }\r\n  })\r\n  return response.data.item\r\n}\r\n\r\nexport async function patchPhoto(\r\n  idToken: string,\r\n  photoId: string,\r\n  updatedPhoto: UpdatePhotoRequest\r\n): Promise<void> {\r\n  await Axios.patch(`${apiEndpoint}/photos/${photoId}`, JSON.stringify(updatedPhoto), {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${idToken}`\r\n    }\r\n  })\r\n}\r\n\r\nexport async function deletePhoto(\r\n  idToken: string,\r\n  photoId: string\r\n): Promise<void> {\r\n  await Axios.delete(`${apiEndpoint}/photos/${photoId}`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${idToken}`\r\n    }\r\n  })\r\n}\r\n\r\nexport async function getUploadUrl(\r\n  idToken: string,\r\n  photoId: string\r\n): Promise<string> {\r\n  const response = await Axios.post(`${apiEndpoint}/photos/${photoId}/attachment`, '', {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${idToken}`\r\n    }\r\n  })\r\n  return response.data.uploadUrl\r\n}\r\n\r\nexport async function uploadFile(uploadUrl: string, file: Buffer): Promise<void> {\r\n  await Axios.put(uploadUrl, file)\r\n}\r\n","import * as React from 'react'\r\nimport Auth from '../auth/Auth'\r\nimport { Button } from 'semantic-ui-react'\r\n\r\ninterface LogInProps {\r\n  auth: Auth\r\n}\r\n\r\ninterface LogInState {}\r\n\r\nexport class LogIn extends React.PureComponent<LogInProps, LogInState> {\r\n  onLogin = () => {\r\n    this.props.auth.login()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Please log in to use Delta Apps</h1>\r\n\r\n        <Button onClick={this.onLogin} size=\"huge\" color=\"olive\">\r\n          Log in\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import * as React from 'react'\r\n\r\ninterface NotFoundProps {\r\n}\r\n\r\ninterface NotFoundState {\r\n}\r\n\r\nexport class NotFound extends React.PureComponent<NotFoundProps, NotFoundState> {\r\n  render() {\r\n    return <h1>Not Found</h1>\r\n  }\r\n}\r\n","import dateFormat from 'dateformat'\r\nimport { History } from 'history'\r\nimport update from 'immutability-helper'\r\nimport * as React from 'react'\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Input,\r\n  Image,\r\n  Loader\r\n} from 'semantic-ui-react'\r\n\r\nimport { createPhoto, deletePhoto, getPhotos, patchPhoto } from '../api/photos-api'\r\nimport Auth from '../auth/Auth'\r\nimport { Photo } from '../types/Photo'\r\n\r\ninterface PhotosProps {\r\n  auth: Auth\r\n  history: History\r\n}\r\n\r\ninterface PhotosState {\r\n  photos: Photo[]\r\n  newPhotoName: string\r\n  loadingPhotos: boolean\r\n}\r\n\r\nexport class Photos extends React.PureComponent<PhotosProps, PhotosState> {\r\n  state: PhotosState = {\r\n    photos: [],\r\n    newPhotoName: '',\r\n    loadingPhotos: true\r\n  }\r\n\r\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ newPhotoName: event.target.value })\r\n  }\r\n\r\n  onEditButtonClick = (photoId: string) => {\r\n    this.props.history.push(`/photos/${photoId}/edit`)\r\n  }\r\n\r\n  onPhotoCreate = async (event: React.ChangeEvent<HTMLButtonElement>) => {\r\n    try {\r\n      const dueDate = this.calculateDueDate()\r\n      const newPhoto = await createPhoto(this.props.auth.getIdToken(), {\r\n        name: this.state.newPhotoName,\r\n        dueDate\r\n      })\r\n      this.setState({\r\n        photos: [...this.state.photos, newPhoto],\r\n        newPhotoName: ''\r\n      })\r\n    } catch {\r\n      alert('Photo creation failed')\r\n    }\r\n  }\r\n\r\n  onPhotoDelete = async (photoId: string) => {\r\n    try {\r\n      await deletePhoto(this.props.auth.getIdToken(), photoId)\r\n      this.setState({\r\n        photos: this.state.photos.filter(photo => photo.photoId !== photoId)\r\n      })\r\n    } catch {\r\n      alert('Photo deletion failed')\r\n    }\r\n  }\r\n\r\n  onPhotoCheck = async (pos: number) => {\r\n    try {\r\n      const photo = this.state.photos[pos]\r\n      await patchPhoto(this.props.auth.getIdToken(), photo.photoId, {\r\n        name: photo.name,\r\n        dueDate: photo.dueDate,\r\n        done: !photo.done\r\n      })\r\n      this.setState({\r\n        photos: update(this.state.photos, {\r\n          [pos]: { done: { $set: !photo.done } }\r\n        })\r\n      })\r\n    } catch {\r\n      alert('Photo deletion failed')\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const photos = await getPhotos(this.props.auth.getIdToken())\r\n      this.setState({\r\n        photos,\r\n        loadingPhotos: false\r\n      })\r\n    } catch (e) {\r\n      alert(`Failed to fetch photos: ${(e as Error).message}`)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header as=\"h1\">Photos List</Header>\r\n\r\n        {this.renderCreatePhotoInput()}\r\n\r\n        {this.renderPhotos()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderCreatePhotoInput() {\r\n    return (\r\n      <Grid.Row>\r\n        <Grid.Column width={16}>\r\n          <Input\r\n            action={{\r\n              color: 'teal',\r\n              labelPosition: 'left',\r\n              icon: 'add',\r\n              content: 'New Photo',\r\n              onClick: this.onPhotoCreate\r\n            }}\r\n            fluid\r\n            actionPosition=\"left\"\r\n            placeholder=\"Photo name\"\r\n            onChange={this.handleNameChange}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Divider />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    )\r\n  }\r\n\r\n  renderPhotos() {\r\n    if (this.state.loadingPhotos) {\r\n      return this.renderLoading()\r\n    }\r\n\r\n    return this.renderPhotosList()\r\n  }\r\n\r\n  renderLoading() {\r\n    return (\r\n      <Grid.Row>\r\n        <Loader indeterminate active inline=\"centered\">\r\n          Loading photos\r\n        </Loader>\r\n      </Grid.Row>\r\n    )\r\n  }\r\n\r\n  renderPhotosList() {\r\n    return (\r\n      <Grid padded>\r\n        {this.state.photos.map((photo, pos) => {\r\n          return (\r\n            <Grid.Row key={photo.photoId}>\r\n              <Grid.Column width={1} verticalAlign=\"middle\">\r\n                <Checkbox\r\n                  onChange={() => this.onPhotoCheck(pos)}\r\n                  checked={photo.done}\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column width={10} verticalAlign=\"middle\">\r\n                {photo.name}\r\n              </Grid.Column>\r\n              <Grid.Column width={3} floated=\"right\">\r\n                {photo.dueDate}\r\n              </Grid.Column>\r\n              <Grid.Column width={1} floated=\"right\">\r\n                <Button\r\n                  icon\r\n                  color=\"blue\"\r\n                  onClick={() => this.onEditButtonClick(photo.photoId)}\r\n                >\r\n                  <Icon name=\"pencil\" />\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column width={1} floated=\"right\">\r\n                <Button\r\n                  icon\r\n                  color=\"red\"\r\n                  onClick={() => this.onPhotoDelete(photo.photoId)}\r\n                >\r\n                  <Icon name=\"delete\" />\r\n                </Button>\r\n              </Grid.Column>\r\n              {photo.attachmentUrl && (\r\n                <Image src={photo.attachmentUrl} size=\"small\" wrapped />\r\n              )}\r\n              <Grid.Column width={16}>\r\n                <Divider />\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          )\r\n        })}\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  calculateDueDate(): string {\r\n    const date = new Date()\r\n    date.setDate(date.getDate() + 7)\r\n\r\n    return dateFormat(date, 'yyyy-mm-dd') as string\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link, Route, Router, Switch } from 'react-router-dom'\r\nimport { Grid, Header, Menu, Segment } from 'semantic-ui-react'\r\n\r\nimport Auth from './auth/Auth'\r\nimport { EditPhoto } from './components/EditPhoto'\r\nimport { LogIn } from './components/LogIn'\r\nimport { NotFound } from './components/NotFound'\r\nimport { Photos } from './components/Photos'\r\n\r\nexport interface AppProps {}\r\n\r\nexport interface AppProps {\r\n  auth: Auth\r\n  history: any\r\n}\r\n\r\nexport interface AppState {}\r\n\r\nexport default class App extends Component<AppProps, AppState> {\r\n  constructor(props: AppProps) {\r\n    super(props)\r\n\r\n    this.handleLogin = this.handleLogin.bind(this)\r\n    this.handleLogout = this.handleLogout.bind(this)\r\n  }\r\n\r\n  handleLogin() {\r\n    this.props.auth.login()\r\n  }\r\n\r\n  handleLogout() {\r\n    this.props.auth.logout()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Segment style={{ padding: '8em 0em' }} vertical>\r\n          <Grid container stackable verticalAlign=\"middle\">\r\n            <Grid.Row>\r\n              <Grid.Column width={16}>\r\n                <Router history={this.props.history}>\r\n                <Header as=\"h2\" textAlign=\"center\" color=\"blue\">\r\n                  DeltaGram\r\n                </Header>\r\n                  {this.generateMenu()}\r\n\r\n                  {this.generateCurrentPage()}\r\n                </Router>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Segment>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  generateMenu() {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item name=\"home\">\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n\r\n        <Menu.Menu position=\"right\">{this.logInLogOutButton()}</Menu.Menu>\r\n      </Menu>\r\n    )\r\n  }\r\n\r\n  logInLogOutButton() {\r\n    if (this.props.auth.isAuthenticated()) {\r\n      return (\r\n        <Menu.Item name=\"logout\" onClick={this.handleLogout}>\r\n          Log Out\r\n        </Menu.Item>\r\n      )\r\n    } else {\r\n      return (\r\n        <Menu.Item name=\"login\" onClick={this.handleLogin}>\r\n          Log In\r\n        </Menu.Item>\r\n      )\r\n    }\r\n  }\r\n\r\n  generateCurrentPage() {\r\n    if (!this.props.auth.isAuthenticated()) {\r\n      return <LogIn auth={this.props.auth} />\r\n    }\r\n\r\n    return (\r\n      <Switch>\r\n        <Route\r\n          path=\"/\"\r\n          exact\r\n          render={props => {\r\n            return <Photos {...props} auth={this.props.auth} />\r\n          }}\r\n        />\r\n\r\n        <Route\r\n          path=\"/photos/:photoId/edit\"\r\n          exact\r\n          render={props => {\r\n            return <EditPhoto {...props} auth={this.props.auth} />\r\n          }}\r\n        />\r\n\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Auth from './auth/Auth'\r\nimport { Router, Route } from 'react-router-dom'\r\nimport Callback from './components/Callback'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport App from './App';\r\nconst history = createHistory()\r\n\r\nconst auth = new Auth(history)\r\n\r\nconst handleAuthentication = (props: any) => {\r\n  const location = props.location\r\n  if (/access_token|id_token|error/.test(location.hash)) {\r\n    auth.handleAuthentication()\r\n  }\r\n}\r\n\r\nexport const makeAuthRouting = () => {\r\n  return (\r\n    <Router history={history}>\r\n      <div>\r\n        <Route\r\n          path=\"/callback\"\r\n          render={props => {\r\n            handleAuthentication(props)\r\n            return <Callback />\r\n          }}\r\n        />\r\n        <Route\r\n          render={props => {\r\n            return <App auth={auth} {...props} />\r\n          }}\r\n        />\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { makeAuthRouting } from './routing';\r\n\r\nReactDOM.render(makeAuthRouting(), document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}